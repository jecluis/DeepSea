
== Debugging OSD creation

The entire creation of an OSD happens in the module osd.deploy.  While the
follow up osd.report should catch any failures, these are the same steps
that will create an OSD manually.

=== Create the necessary partitions
This command creates any necessary partitions according to the configuration. No partitions may be created.
```
# salt 'data4*' osd.partition /dev/vdd
data4.ceph:
    0
```
Compare the results of `salt 'data4*' pillar.get ceph` (or `salt 'data*4' pillar.get storage`) to the partitions created on the designated minion.  Use `fdisk -l` or `parted DEVICE print` to verify that the partitions are created as configured.

WARNING: Do not rerun this command multiple times without deleting the additional partitions.  The prepare and activate steps search for the last created partitions of a specific type.  If the osd.partition command above creates two partitions and is run three times, four unnecessary partitions will be created.  These four partitions will effectively be orphaned and require manual removal.


=== Generate the prepare command
This command only outputs the ceph-disk command, but does not execute it.  Copy the generated ceph-disk command to the designated minion and run the command directly.  
```
admin:/srv/salt/ceph/remove/storage # salt 'data4*' osd.prepare /dev/vdd
data4.ceph:
    ceph-disk -v prepare --bluestore --data-dev --journal-dev --cluster ceph --cluster-uuid 1889a6d9-7e10-360b-82b5-2eab3a9670de --block.db /dev/vdg13 --block.wal /dev/vdg12 /dev/vdd
```
This command is *not* idempotent.  Running the command a second time will result in an error, although the OSD may be perfectly configured.

=== Generate the activate command
Likewise, this command only outputs the ceph-disk command and does not execute it.  Copy the generated ceph-disk command to the designated minion and run the command directly.
```
admin:/srv/salt/ceph/remove/storage # salt 'data4*' osd.activate /dev/vdd
data4.ceph:
    ceph-disk -v activate --mark-init systemd --mount /dev/vdd1
```

== Alternate debugging

Enable debugging by setting `log_level: debug` in /etc/salt/minion and restarting the minion.  All of the commands above with their outputs will appear in /var/log/salt/minion.

